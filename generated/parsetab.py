
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ELSE FOR IDENTIFIER IF IS NOT NUMBER STRING TOprogramme : statement\n        | statement programmestatement : assignation\n        | structurestructure : condition\n        | loopcondition : if '(' parameter IS STRING ')' bloc \n        | if '(' parameter IS STRING ')' bloc ELSE bloc\n        | if '(' parameter IS NOT STRING ')' bloc\n        | if '(' parameter IS NOT STRING ')' bloc ELSE blocif : IFloop : FOR '(' IDENTIFIER '=' NUMBER TO NUMBER ')' blocassignation : IDENTIFIER content\n        | IDENTIFIER attribute content attribute : parameter '=' STRINGparameter : IDENTIFIERcontent : bloc\n        | elementbloc : '{' programme '}' element : expression ';'expression : NUMBERexpression : STRING"
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,6,7,13,15,16,19,22,23,24,27,31,40,44,46,48,49,],[5,5,-3,-4,12,-5,-6,-13,-17,-18,5,12,29,-14,-20,-19,-7,-9,-8,-12,-10,]),'FOR':([0,2,3,4,6,7,13,15,16,19,24,27,31,40,44,46,48,49,],[9,9,-3,-4,-5,-6,-13,-17,-18,9,-14,-20,-19,-7,-9,-8,-12,-10,]),'IF':([0,2,3,4,6,7,13,15,16,19,24,27,31,40,44,46,48,49,],[10,10,-3,-4,-5,-6,-13,-17,-18,10,-14,-20,-19,-7,-9,-8,-12,-10,]),'$end':([1,2,3,4,6,7,11,13,15,16,24,27,31,40,44,46,48,49,],[0,-1,-3,-4,-5,-6,-2,-13,-17,-18,-14,-20,-19,-7,-9,-8,-12,-10,]),'}':([2,3,4,6,7,11,13,15,16,24,26,27,31,40,44,46,48,49,],[-1,-3,-4,-5,-6,-2,-13,-17,-18,-14,31,-20,-19,-7,-9,-8,-12,-10,]),'{':([5,14,30,37,41,43,45,47,],[19,19,-15,19,19,19,19,19,]),'NUMBER':([5,14,30,33,39,],[21,21,-15,36,42,]),'STRING':([5,14,25,30,32,35,],[18,18,30,-15,34,38,]),'(':([8,9,10,],[22,23,-11,]),'=':([12,17,29,],[-16,25,33,]),'IS':([12,28,],[-16,32,]),';':([18,20,21,],[-22,27,-21,]),'ELSE':([31,40,44,],[-19,43,47,]),'NOT':([32,],[35,]),')':([34,38,42,],[37,41,45,]),'TO':([36,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,19,],[1,11,26,]),'statement':([0,2,19,],[2,2,2,]),'assignation':([0,2,19,],[3,3,3,]),'structure':([0,2,19,],[4,4,4,]),'condition':([0,2,19,],[6,6,6,]),'loop':([0,2,19,],[7,7,7,]),'if':([0,2,19,],[8,8,8,]),'content':([5,14,],[13,24,]),'attribute':([5,],[14,]),'bloc':([5,14,37,41,43,45,47,],[15,15,40,44,46,48,49,]),'element':([5,14,],[16,16,]),'parameter':([5,22,],[17,28,]),'expression':([5,14,],[20,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme','parserHiComp.py',43),
  ('programme -> statement programme','programme',2,'p_programme','parserHiComp.py',44),
  ('statement -> assignation','statement',1,'p_statement','parserHiComp.py',51),
  ('statement -> structure','statement',1,'p_statement','parserHiComp.py',52),
  ('structure -> condition','structure',1,'p_structure','parserHiComp.py',57),
  ('structure -> loop','structure',1,'p_structure','parserHiComp.py',58),
  ('condition -> if ( parameter IS STRING ) bloc','condition',7,'p_condition','parserHiComp.py',62),
  ('condition -> if ( parameter IS STRING ) bloc ELSE bloc','condition',9,'p_condition','parserHiComp.py',63),
  ('condition -> if ( parameter IS NOT STRING ) bloc','condition',8,'p_condition','parserHiComp.py',64),
  ('condition -> if ( parameter IS NOT STRING ) bloc ELSE bloc','condition',10,'p_condition','parserHiComp.py',65),
  ('if -> IF','if',1,'p_if','parserHiComp.py',84),
  ('loop -> FOR ( IDENTIFIER = NUMBER TO NUMBER ) bloc','loop',9,'p_loop','parserHiComp.py',92),
  ('assignation -> IDENTIFIER content','assignation',2,'p_assign','parserHiComp.py',101),
  ('assignation -> IDENTIFIER attribute content','assignation',3,'p_assign','parserHiComp.py',102),
  ('attribute -> parameter = STRING','attribute',3,'p_attribute','parserHiComp.py',129),
  ('parameter -> IDENTIFIER','parameter',1,'p_parameter','parserHiComp.py',166),
  ('content -> bloc','content',1,'p_content','parserHiComp.py',175),
  ('content -> element','content',1,'p_content','parserHiComp.py',176),
  ('bloc -> { programme }','bloc',3,'p_bloc','parserHiComp.py',180),
  ('element -> expression ;','element',2,'p_element','parserHiComp.py',185),
  ('expression -> NUMBER','expression',1,'p_expression_num','parserHiComp.py',190),
  ('expression -> STRING','expression',1,'p_expression_string','parserHiComp.py',194),
]
